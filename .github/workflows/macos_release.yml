name: MacOS Release

on:
  push:
    branches:
      - 'master'
      - 'Stable*'
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - '*'

defaults:
  run:
    shell: bash

env:
  SOURCE_DIR: ${{ github.workspace }}
  QT_VERSION: 5.15.2
  ARTIFACT: QGroundControl.dmg
  BUILD_TYPE: ${{ fromJSON('["DailyBuild", "StableBuild"]')[ github.ref_type == 'tag' || contains(github.ref, 'Stable_' ) ] }}

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Get all tags for correct version determination
        working-directory: ${{ github.workspace }}
        run: |
          git fetch --all --tags -f --depth 1

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ env.QT_VERSION }}
          host: mac
          target: desktop
          dir: ${{ runner.temp }}
          modules: qtcharts
          setup-python: false

      - name: Install Gstreamer
        run: |
          wget --quiet https://qgroundcontrol.s3-us-west-2.amazonaws.com/dependencies/gstreamer-osx-1.18.1.tar.bz2 &&
          sudo tar zxf gstreamer-osx-1.18.1.tar.bz2 -C /Library/Frameworks


      - name: Install ccache
        run: brew install ccache

      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        run: echo "name=timestamp::$(date --utc +'%Y-%m-%d-%H\;%M\;%S')" >> $GITHUB_OUTPUT

      - name: ccache cache files
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{steps.ccache_cache_timestamp.outputs.timestamp}}
          restore-keys: ${{ runner.os }}-ccache-

      - name: Setup ccache
        run: |
          mkdir -p ~/.ccache
          echo "base_dir = ${GITHUB_WORKSPACE}" > ~/.ccache/ccache.conf
          echo "compression = true" >> ~/.ccache/ccache.conf
          echo "compression_level = 5" >> ~/.ccache/ccache.conf
          ccache -s
          ccache -z

      - name: Create build directory
        run: mkdir ${{ runner.temp }}/shadow_build_dir

      - name: Build
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: |
          export JOBS=$((`sysctl -n hw.ncpu`+1))
          qmake -r ${SOURCE_DIR}/qgroundcontrol.pro CONFIG+=installer CONFIG+=${BUILD_TYPE} LIBS+=-L/Library/Frameworks/GStreamer.framework/Libraries
          make -j$JOBS

      - name: ccache post-run
        run: ccache -s

      - name: Save artifact
        uses: actions/upload-artifact@master
        with:
          name: QGroundControl32
          path: ${{ runner.temp }}/shadow_build_dir/

      - name: Download artifact
        uses: actions/download-artifact@master
        with:
          name: QGroundControlMac  # Replace with the actual artifact name
