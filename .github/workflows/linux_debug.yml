name: Linux Debug and Test

on:
  push:
    branches:
      - 'master'
      - 'main'
      - 'QGCustomAPM'
      - 'missionPlanner3'

  pull_request:
    branches:
      - '*'

defaults:
  run:
    shell: bash

env:
  SOURCE_DIR: ${{ github.workspace }}
  QT_VERSION: 5.15.2
  BUILD_TYPE: ${{ fromJSON('["DailyBuild", "StableBuild"]')[ github.ref_type == 'tag' || contains(github.ref, 'Stable_' ) ] }}

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ env.QT_VERSION }}
          host: linux
          target: desktop
          dir: ${{ runner.temp }}
          modules: qtcharts
          setup-python: true

      - name: Install QGC source dependencies
        run: sudo apt-get install -y libsdl2-dev

      - name: Install source dependencies required to run unit tests in workflow container
        run: sudo apt-get install -y libxkbcommon-x11-0

      - name: Install Gstreamer dev packages
        run: sudo apt-get install -y libgstreamer-plugins-base1.0-dev libgstreamer1.0-0:amd64 libgstreamer1.0-dev

      - name: Install post-link dependencies
        run: sudo apt-get install -y binutils patchelf


      - name: Build
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: |
          qmake -r ${SOURCE_DIR}/qgroundcontrol.pro CONFIG+=debug CONFIG+=${BUILD_TYPE}
          make -j2

      - name: Create AppImage
        working-directory:  ${{ runner.temp }}/shadow_build_dir
        run:                ${SOURCE_DIR}/deploy/create_linux_appimage.sh ${SOURCE_DIR} ./staging ./package;

      - name: Save artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}/shadow_build_dir/package/${{ env.ARTIFACT }}

      - name: Download artifact
        uses: actions/download-artifact@master
        with:
          name: ${{ env.ARTIFACT }}